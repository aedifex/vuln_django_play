
stages:
  - build
  - test
  - deploy
  - hawkscan

variables:
  DAST_ARTIFACT: 1

before_script:
  - env
  - echo "deb http://toolbelt.heroku.com/ubuntu ./" > /etc/apt/sources.list.d/heroku.list
  - wget -O- https://toolbelt.heroku.com/apt/release.key | apt-key add -
  - apt-get update
  - apt-get install -y heroku-toolbelt
  - gem install dpl

heroku:
  stage: deploy
  script:
    - env
    - git push heroku feature/hawkscan-dast:master
    - dpl --provider=heroku --app=vuln_django --api_key=$HEROKU_API_KEY
    - |
      heroku ps:exec "bash -c '. .profile.d/python.sh;
      python manage.py migrate;
      DJANGO_SUPERUSER_PASSWORD=adminpassword python manage.py createsuperuser --email=admin@exmaple.com --username=admin;
      python manage.py seed polls --number=5'" -a vuln-django -d web.1

hawkscan:
  stage: hawkscan
  image:
    name: "stackhawk/hawkscan:latest"
    entrypoint: [""]
  variables:
    GIT_STRATEGY: fetch
  allow_failure: true
  script:
    - env
    - if [ -z "$HAWK_API_ID$HAWK_API_SECRET" ]; then echo "HAWK_API_ID and HAWK_API_SECRET are required" && exit 1; fi
    - export API_KEY="hawk.${HAWK_API_ID}.${HAWK_API_SECRET}"
    - export NO_COLOR=true
    - env
    - shawk $HAWKSCAN_ARGS
  artifacts:
    reports:
      dast: stackhawk-dast-report.json
