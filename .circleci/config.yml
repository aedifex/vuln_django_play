version: 2.1

orbs:
  stackhawk: stackhawk/stackhawk@1.0.1
  secrethub: secrethub/cli@1.1.0
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  fossa_test:
    environment:
      FOSSA_API_KEY: secrethub://webinar/appsec/fossa/api_key
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - run:
          name: Install FOSSA cli
          command: |
            curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash
      - secrethub/exec:
          step-name: FOSSA Analyze
          command: /usr/local/bin/fossa --no-ansi
      - secrethub/exec:
          step-name: FOSSA Test
          command: /usr/local/bin/fossa test --no-ansi --suppress-issues
  deploy-application:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      aws-region:
        description: |
          Region in which resources are deployed
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/project
      #- run:
      #    name: Load Docker image from tar file
      #    command: docker load --input image.tar
      - kubernetes/install
      - run:
          name: Authenticate Docker Registry
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region>>
      - run:
          name: Test cluster
          command: |
            kubectl get services
      - run:
          name: Build Docker Image
          command: docker build --no-cache -f Dockerfile -t "chriscircleci/vuln_django:${CIRCLE_SHA1}" .
      - run:
          name: Publish Docker Image
          command: docker push chriscircleci/vuln_django:${CIRCLE_SHA1}
      - run:
          name: Install envar utility (envsubst)
          command: sudo apt-get install gettext-base
      - run:
          name: Update Cluster
          command: |
            kubectl apply -f yaml/hello-webinar.yaml --validate=false

workflows:
  build-and-scan:
    jobs:
      # - fossa_test
      # - stackhawk/hawkscan-local:
      #     configuration-files: ./stackhawk.yml ./stackhawk-circleci.yml
      #     docker-network: scan_net
      #     app-id: a629eeae-4bb9-4918-b3eb-bb141b4e8918
      #     pre-steps:
      #       - secrethub/env-export:
      #           var-name: HAWK_API_KEY
      #           secret-path: webinar/appsec/stackhawk/api_key
      #     steps:
      #       - run:
      #           name: Build Vulnarable Django
      #           command: docker build -t vuln_django:latest .
      #       - run:
      #           name: Create scan_net Network
      #           command: docker network create scan_net
      #       - run:
      #           name: Run Vulny Django
      #           command: docker run --detach --network scan_net --name vuln-django --rm vuln_django:latest
      #       - run:
      #           name: Export Docker image as tar file
      #           command: docker save vuln_django:latest > image.tar
      #       - persist_to_workspace:
      #             root: ~/project
      #             paths:
      #               - image.tar
      - deploy-application:
          cluster-name: another-eks-demo
          aws-region: us-west-2
          context: cdk8s
       #   requires:
        #    - stackhawk/hawkscan-local
